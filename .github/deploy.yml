name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: circleci/openjdk:11-jdk
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: v1-dependencies-${{ hashFiles('pom.xml') }}
      - name: Build and test
        run: mvn clean install -DskipTests
      - name: Save cache
        if: success()
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: v1-dependencies-${{ hashFiles('pom.xml') }}
  docker-image-and-publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Get login password
        run: aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 289073749577.dkr.ecr.eu-west-2.amazonaws.com
      - name: Build and push Docker image
        run: |
          docker build -t ticketinapp .
          docker tag ticketinapp:latest 289073749577.dkr.ecr.eu-west-2.amazonaws.com/ticketinapp:latest
          docker push 289073749577.dkr.ecr.eu-west-2.amazonaws.com/ticketinapp:latest
  deploy-job:
    needs: docker-image-and-publish
    runs-on: ubuntu-latest
    container:
      image: circleci/node:10.0.0
    steps:
      - name: Execute Deployment Script
        run: |
          ssh -o "StrictHostKeyChecking=no" ec2-user@ec2-13-41-193-175.eu-west-2.compute.amazonaws.com '/bin/bash bin/deploy_image.sh'
          docker ps
